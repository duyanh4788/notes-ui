name: CI/CD for notes-ui (Tag-based)

on:
  push:
    tags:
      - "v*"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:        
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Build Frontend
        run: npm run build

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Dockerize Frontend
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/notes-ui-image:${GITHUB_REF#refs/tags/} .
          docker tag ${{ secrets.DOCKER_USERNAME }}/notes-ui-image:${GITHUB_REF#refs/tags/} ${{ secrets.DOCKER_USERNAME }}/notes-ui-image:latest

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/notes-ui-image:${GITHUB_REF#refs/tags/}
          docker push ${{ secrets.DOCKER_USERNAME }}/notes-ui-image:latest       

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to Ubuntu Server via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.SERVER_PORT }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
              eval $(ssh-agent -s)
              echo "${{ secrets.SERVER_SSH_KEY }}" | tr -d '\r' | ssh-add -
              mkdir -p ~/.ssh
              chmod 700 ~/.ssh
              ssh-keyscan github.com >> ~/.ssh/known_hosts
              chmod 644 ~/.ssh/known_hosts
              ssh -v -p ${{ secrets.SERVER_PORT }} -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}
        
              set -e
              echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
              
              mkdir -p ~/${{ secrets.PATH_FLODER }}/${{ secrets.PROJECT }}/notes-ui
              docker pull ${{ secrets.DOCKER_USERNAME }}/notes-ui-image:${{ github.ref_name }}
              cd ~/${{ secrets.PATH_FLODER }}/${{ secrets.PROJECT }}/notes-ui
              export IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/notes-ui-image:${{ github.ref_name }}"
              docker compose up -d --force-recreate
