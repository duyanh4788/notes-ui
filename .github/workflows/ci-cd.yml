name: CI/CD for notes-ui (Tag-based)

on:
  push:
    tags:
      - "v*"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install dependencies
        run: npm install

      - name: Build Frontend
        run: npm run build

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Dockerize Frontend
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/notes-ui-image:${GITHUB_REF#refs/tags/} .
          docker tag ${{ secrets.DOCKER_USERNAME }}/notes-ui-image:${GITHUB_REF#refs/tags/} ${{ secrets.DOCKER_USERNAME }}/notes-ui-image:latest

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/notes-ui-image:${GITHUB_REF#refs/tags/}
          docker push ${{ secrets.DOCKER_USERNAME }}/notes-ui-image:latest

      - name: Deploy to Ubuntu Server via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.SERVER_PORT }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            ssh -o KexAlgorithms=diffie-hellman-group14-sha256 ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} -p ${{ secrets.SERVER_PORT }} << 'EOF'
              docker pull ${{ secrets.DOCKER_USERNAME }}/notes-ui-image:${GITHUB_REF#refs/tags/}
              docker stop notes-ui || true
              docker rm notes-ui || true
              docker run -d --name notes-ui --restart unless-stopped -p 3000:80 ${{ secrets.DOCKER_USERNAME }}/notes-ui-image:${GITHUB_REF#refs/tags/}
              docker image prune -f
            EOF
